1. How did viewing a diff between two versions of a file help you see the bug
that was introduced?

Viewing a diff enabled me to identify the locations in a file where changes
had been made, therefore highlighting the areas in the file where a bug was
most likely to be.

2. How could having easy access to the entire history of a file make you a
more efficient programmer in the long term?

Being able to access any version of a file means that I can more quickly undo
any changes I’ve made to code, if for example a bug occurs after saving the
most recent version of a file. It also makes it easier to reuse the same code
that may be relevant in a new project.

3. What do you think are the pros and cons of manually choosing when to create
a commit, like you do in Git, vs having versions automatically saved, like
Google Docs does?

Pros:
- Flexible to developer’s preference and working style.
- Total control over commits, ensuring that they are logical, useful and able
to compile.
- Less clutter of versions making it easier to find the appropriate file to
inspect or edit.

Cons:
- Subject to individual error, e.g. forgetting to save changes
- Subject to individual interpretation of when to save changes, which may or
may not be the optimal moment.

4. Why do you think some version control systems, like Git, allow saving
multiple files in one commit, while others, like Google Docs, treat each file
separately?

So that developers can track and quickly access changes made to multiple
interrelated files.

5. How can you use the commands git log and git diff to view the history of
files?

Entering the command git log displays the list of commits for a particular
git repository, while the command git diff enables one to compare two commits
in that repository to see the changes that were made between them.

6. How might using version control make you more confident to make changes that
could break something?

It makes me more confident knowing that even if I make changes that breaks
something I can quite easily locate where those changes were made and correct
them.

7. Now that you have your workspace set up, what do you want to try using Git
for?

Open the files of different commits.
























