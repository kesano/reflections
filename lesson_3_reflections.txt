1. When would you want to use a remote repository rather than keeping all your work
local?

I would want to use a remote repository when I am collaborating on a project with
multiple contributors, each of which producing code from their personal devices.

2. Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

So that a local change that has not yet been committed and pushed to the remote
repository does not get lost or overwritten.

3. Describe the differences between forks, clones, and branches. When would you use
one instead of another?

A fork is a clone of a repository on GitHub that is created on GitHubâ€™s servers
as opposed to locally. A clone is a copy of a local repository or a repository that
is on GitHub. A branch is an extension of an existing branch of commits, in which
new commits can be made that do not affect the official public version.

4. What is the benefit of having a copy of the last known state of the remote stored
locally?

Having a local copy of the last known state of the remote is useful for knowing when
it is behind commits with the local and/or remote branch. It can be used to identify
which new commits have been added to the remote since it was last synced with the
remote stored locally. It also provides a way for the remote to be fully updated with
the changes made locally, by merging the new local commits with the remote stored
locally and then pushing the local remote to the remote repository on GitHub.





